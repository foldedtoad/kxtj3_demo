/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright (c) 2024 Callender Consulting LLC
 */

#if 0
#include <kxtj3_dt_bindings.h>
#else
/* GPIO interrupt configuration */
#define KXTJ3_DT_GPIO_INT_EDGE             0
#define KXTJ3_DT_GPIO_INT_EDGE_RISING      1
#define KXTJ3_DT_GPIO_INT_EDGE_FALLING     2
#define KXTJ3_DT_GPIO_INT_LEVEL_HIGH       3
#define KXTJ3_DT_GPIO_INT_LEVEL_LOW        4

/* Any Motion mode */
#define KXTJ3_DT_ANYM_OR_COMBINATION       0
#define KXTJ3_DT_ANYM_6D_MOVEMENT          1
#define KXTJ3_DT_ANYM_AND_COMBINATION      2
#define KXTJ3_DT_ANYM_6D_POSITION          3
#endif

&pinctrl {
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 26)>,
                    <NRF_PSEL(TWIM_SCL, 0, 27)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 26)>,
                    <NRF_PSEL(TWIM_SCL, 0, 27)>;
            low-power-enable;
        };
    };
};


arduino_i2c: &i2c0 {
    compatible = "nordic,nrf-twi";
    status = "okay";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    clock-frequency = <I2C_BITRATE_STANDARD>;

    kxtj3: kxtj3@35 {
        status = "okay";
        compatible = "kionix,kxtj3";
        reg = <0x35>;
        #io-channel-cells = <1>;
        #address-cells = <1>;
        #size-cells = <0>;
        irq-gpios = <&gpio0 2 0>;
        anym-on-int;
        anym-mode = <KXTJ3_DT_ANYM_6D_MOVEMENT>;
    };
};
